#! /bin/sh
#
# script.sh
# Copyright (C) 2017 urbikn <urbikn@knuples.net>
#
# Distributed under terms of the MIT license.
#

# Make temporary file
# link: https://unix.stackexchange.com/a/181938
tmpfile=$(mktemp /tmp/urnik.XXXXXX)
FILENAME='data/urnik.txt'
            
OPTS=$(getopt -o gwhd --long general,entire-week,download,help: -n 'parse-options' -- "$@")

if [ $? != 0 ] ; then echo -e "Failed parsing options." >&2 ; exit 1 ; fi

eval set -- "$OPTS"

GENERAL=false
ENTIRE_WEEK=false
HELP=false
DOWNLOAD=false
USE_SED=true
day=''
data=''



while true; do
  case "$1" in
    -g | --general ) GENERAL=true; shift ;;
    -w | --entire-week )    ENTIRE_WEEK=true; shift ;;
    -d | --download ) DOWNLOAD=true; shift ;;
    -h | --help ) HELP=true; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

help () {
    usage="$(basename 'urnik') [-g] [-w] [-h] [-d] -- Program to get my schedule for school (urnik pač):
             \n\t-g, --general\t\tShows general schedule for program RIT
             \n\t-w, --entire-week\tDisables the function of showing todays schedule
             \n\t-d, --download\t\tDownloads the weeks schedule
             \n\n\nExamples:
             \n\turnik\t\tGets you custom schedual for that day
             \n\turnik -g\tGets the general schedual for that day
             \n\turnik -gw\tGets the general schedual for the entire week
             \n\nCopyright (C) Urban Knupleš
             \nDistributed under terms of the MIT license."

    echo -e $usage
    USE_SED=false
}




getDay () {
    # Returns day in slovene

    day=$(date | cut -c 1-3| awk '{print tolower($0)}')
    if [ "$day" = "mon" ]; then
        day='PON'
    elif [ "$day" = "tue" ]; then
        day='TOR'
    elif [ "$day" = "wen" ]; then
        day='SRE'
    elif [ "$day" = "thu" ]; then
        day='ČET'
    elif [ "$day" = "fri" ]; then
        day='PET'
    else
        day='None'
    fi
}

# DON'T REMOVE COMMENT! Code is meant to be used so the program knows where to find the default folder where data is stored.



if $HELP; then
    help
elif $DOWNLOAD; then
    python3 main.py "force_download"
    command -v notify-send > /dev/null && notify-send -t 0 "Finished downloading schedule."
    USE_SED=false
else # Display course

    # Gets section of schedual based on wheather it is custom or entire
    if $GENERAL; then # General schedual
        cat $FILENAME | sed -e '1,/!.*!/d'| tail -n +5 > "$tmpfile"
        
    else # Custom user schedual
        cat $FILENAME | sed -ne '/!.*!/,$p'| tail -n +6 > "$tmpfile"
    fi
    
    
    if ! $ENTIRE_WEEK; then
        getDay
        echo "$(cat "$tmpfile" | sed -ne '/\:.'$day'/,$p'| head -n 9)" > "$tmpfile"
    fi
    
    
    if [ -s '$tmpfile' ]; then
        USE_SED=false
        echo -e "\nDanes nimaš pouka. Uporabi [-w], da vidiš cel tedenski urnik.\n"

    fi
    
fi

if $USE_SED; then
	cat "$tmpfile" | less -S || echo -e "\nWon't work, did you forget to download data?\n> Use command urnik -d\n\n"
fi

rm "$tmpfile"
