#! /bin/sh
#
# setup.sh
# Copyright (C) 2018 urbikn <urbikn@knuples.net>
#
# Distributed under terms of the MIT license.
#

RED='\033[1;31m'
GREEN='\033[0;32m'
LGREEN='\033[1;32m'
NC='\033[0m' # No color
downloadPath=$(pwd)


# -----------------------
# Checks if script exists in /usr/bin
# -----------------------

scriptLocation=$(command -v urnik)

if [ "$scriptLocation" ]; then
    printf "${RED}Found command urnik in system\n"
    printf "removing command urnik from %s ${NC}\n" "$scriptLocation$"
    sudo rm "$scriptLocation"
fi

# -----------------------
# Check if selenium installed
# -----------------------

printf "${GREEN}\nChecking if selenium installed:\n${NC}"
pip3 list 2> /dev/null | grep -E "selenium" 

if [ $? -eq 1 ]; then
    printf "${RED}Starting to download selenium via pip3:"
    pip3 install selenium
else
    printf "${LGREEN}You got it."
fi
printf "\n${NC}"

# -----------------------
# Check if geckodriver installed
# -----------------------
data="$( type geckodriver )"
test="$( expr 'geckodriver: not found' : "$data" )"
if [ "$test" -ne 0 ]; then
    printf "${LGREEN}Downloading geckodriver\n${NC}"
    wget https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-linux64.tar.gz   
    tar -xvzf geckodriver*
    chmod +x geckodriver
    printf "${LGREEN}movin' geckodriver to /usr/local/bin/.\n${NC}"
    sudo mv geckodriver /usr/local/bin/
fi
# -----------------------
# Start moving script directory
# -----------------------

cd ~
homePath=$(pwd)

printf "${GREEN}\nMoving downloaded directory to ${homePath}.\n${NC}"
cp -r "$downloadPath" "$homePath" 2> /dev/null
mv "$(ls . -1l | grep -E 'feri-urnik' | rev | cut -d " " -f 1 | rev)" urnik 2> /dev/null
cd "$homePath/urnik"

# Removes git repo, script setup and image folder from directory
rm -rf .git* setup img

# Changes command inside urnik shell (command is cd ..path..)
sed -i '84i cd '"$homePath"'/urnik' urnik 


printf "${GREEN}\nMoving script 'urnik' to /usr/local/bin/.\n${NC}"
sudo mv urnik /usr/local/bin/

mkdir data 2> /dev/null


printf ""
# -----------------------
# Creating cron
# -----------------------
printf "\n"
read -p "Would you like to have schedule updated every week? (y/N)" cronJob;
printf "\n"

if [ "$cronJob" = "y" ]; then
    printf "${GREEN}\nWritting a line in cron\n${NC}"
    (crontab -l 2>/dev/null; echo "15 * * * * $homePath/urnik/main.py") | crontab -
fi


# -----------------------
# Download schedule
# -----------------------
printf "\n"

read -p "Would you like to start downloading schedule now? (y/N): " download;
printf "\n"
if [ "$download" = "y" ]; then
    printf "${RED}Starting process...\n${NC}"
    urnik -dr
else
    urnik -r
    printf "${RED}REMEMBER: ${NC}Before calling command/script, download schedule with command ${GREEN}urnik -d${NC}"
fi
printf "\n"
printf "${RED}Please remember to add your laboratory groups in the config/user_data.json file, otherwise you won't have your groups shown";
printf "\n"

echo "Finished installing program. You can check command by typing 'urnik -h'. The installation folder has moved everything to $homePath/urnik directory"
command -v notfy-send > /dev/null && notfy-send "Finished setting up urnik."
